//elarray.h
//Объявление класса TElArray
//Copyright (c) JohnSoft 1998. All rights reserved.
//Initial date: September,16,1998. Final date: September,30,1998.
//Заголовочный файл elarray.h объявляет класс TElArray, который позволяет
//описать свойства составных элементов антенной решетки. TElArray является
//производным класса Antenna. Он расширяет свойства класса Antenna с целью
//возможности конструирования (моделирования) антенных решеток. TElArray
//является БАЗОВЫМ КЛАССОМ для классов описывающих линейную антенную решетку
//(COLLINEAR ARRAY) и плоскую антенную решетку (SPACED ARRAY).
//Предполагается, что любую антенную решетку можно представить как совокупность
//ОДНОГО ОСНОВНОГО ЭЛЕМЕНТА РЕШЕТКИ и N ВСПОМОГАТЕЛЬНЫХ ЭЛЕМЕНТОВ (КАНАЛОВ).
//Под основным элементом понимается такой элемент антенной решетки относительно
//которого рассчитываются фазовые набеги в остальных элементах решетки. Вспомо-
//гательные элементы могут располагаться слева и справа (для линейной АР) от ос-
//новного элемента и вместе с основным элементом АР. Элемент антенной решетки
//может быть учтен при расчетах или не учтен. Между двумя соседними элементами
//задается относительное расстояние - относительная база антенной системы. Кроме
//того, вводится относительное расстояние между вспомогательным и основным эле-
//ментами АР. Для основного элемента - это относительный раскрыв антенны.

#if !defined(__ELARRAY_H)
#define __ELARRAY_H

#include "antenna.h" //Заголовочный файл содержит объявление класса Antenna

#define CONSOLE 1     //В программе используется консольный ввод-вывод

const bool MASTER = true;  //Основной элемент антенной решетки
const bool SLAVE  = false; //Вспомогательный элемент антенной решетки

//****************************************************************************
// ОБЪЯВЛЕНИЕ КЛАССА - TElArray - ЭЛЕМЕНТ АНТЕННОЙ РЕШЕТКИ
//****************************************************************************
class TElArray : public Antenna {
 //Объявление защищенных членов-данных класса TElemAntArray
 protected:
  //Порядковый номер расположения вспомогательного элемента АР относительно ос-
  //новного. Возможные варианты расположения вспомогательного элемента:
  //1. num < 0 - элемент АР расположен слева от основного;
  //2. num = 0 - элемент АР расположен вместе с основным;
  //3. num = 0 - элемент АР расположен справа от основного;
  long num;
  //Статус элемента АР - ОСНОВНОЙ (MASTER) или ВСПОМОГАТЕЛЬНЫЙ (SLAVE)
  //В АР всегда присутствует только ОДИН ОСНОВНОЙ ЭЛЕМЕНТ. Относительно этого
  //элемента идет расчет фазовых набегов в остальных (вспомогательных) элементах
  //АР. Фазовый набег в основном элементе решетки считается равным нулю.
  bool status;
  //Использование элемента АР при расчетах (работоспособность) - ON или OFF
  bool usage;
  //Относительное расстояние (база) между двумя соседними элементами АР.
  //Относительная база - это отношение расстояние между соседними элементами к
  //длине волны, соответствующей частоте f0 для узкополосной системы.
  double lv;
  //Относительное расстояние между данным вспомогательным элементом АР и ее
  //основным элементом. Для основного элемента АР данная переменная хранит вели-
  //чину относительного раскрыва антенной системы.
  double l;
  //Коэффициент определяющий уровень приема антенны относительно уровня приема
  //антенны с максимальным КНД: коэффициент 0 < n <= 1. Коэффициент n вводится
  //в АР, которая состоит из неоднородных антенн - антенн разных типов. В одно-
  //родной антенной решетке n = 1.
  double n;

 //-----------------------------------------------------------------
 //I. Объявление общедоступных членов-функций класса TElArray
 //-----------------------------------------------------------------
 public:
  //Установка характеристик элемента АР
  void SetNum(long value)        {num = value;};
  void SetStatus(bool log = SLAVE) {status = log;};
  void SetUsage(bool log = ON)     {usage = log;};
  void SetLv(double value)         {lv = value;};
  void SetL(double value)          {l = value;};
  void SetN(double value)          {n = value;};
  //Получение характеристик по элементу АР
  double GetNum()  {return num;};
  bool GetStatus() {return status;};
  bool GetUsage()  {return usage;};
  double GetLv()   {return lv;};
  double GetL()    {return l;};
  double GetN()    {return n;};
  //Получение характеристик элемента АР в виде строкового объекта string
  virtual string& GetPerformance(string& s, bool headfoot = ON);

 //*********  ОБЪЯВЛЕНИЕ КОНСТРУКТОРОВ И ДЕСТРУКТОРА КЛАССА TElArray *********
 //Объявление конструктора по умолчанию
 TElArray() : Antenna() { InitPerformance(); };
 //Объявление конструктора с аргументами
 TElArray(uint AntType, bool EPlLocate = MERIDIAN, ARGLIST* E_Arg = NULL,
          ARGLIST* H_Arg = NULL);
 //Объявление деструктора класса
 virtual ~TElArray();

 //------------------------------------------------------------
 //II. Объявление защищенных членов-функций класса TElArray
 //------------------------------------------------------------
 protected:
  //Начальная инициализация всех характеристик элемента АР
  virtual void InitPerformance();

}; //Завершение объявления класса TElemAntArray

#endif  //ЗАВЕРШЕНИЕ ОБЪЯВЛЕНИЯ ЗАГОЛОВОЧНОГО ФАЙЛА "ELARRAY.H"